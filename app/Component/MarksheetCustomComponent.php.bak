<?php 
namespace App\Component;
use App\Http\Controllers\Controller;
use App\Models\AllotingCopiesExaminer;
use App\Models\MarkingAbsentStudent;
use App\Models\StudentAllotmentMark;
use App\Helper\CustomHelper; 
use App\models\Student;
use App\models\ExamSubject;
use App\models\supplementary;
use App\models\StudentAllotment;
use App\models\ExamResult;
use App\models\Document;
use App\models\Address;
use App\models\Subject;
use App\models\User;
use App\models\Logs;
use Carbon\Carbon;
use Validator; 
use Session;
use Config;
use Cache;
use Auth;
use DB;
use phpqrcode\phpqrcode;
use App\models\Pastdata;
//use App\models\Student;
use App\models\Application;
use App\models\MarksheetPrint;
use App\models\CertificatePrint;
use App\Http\Traits\QRcode;
use File;


class MarksheetCustomComponent { 
  
	public function getYearInWord($number=null)
	{
		
		$dictionary  = array(	
			1                   => 'One',
			2                   => 'Two',
			3                   => 'Three',
			4                   => 'Four',
			5                   => 'Five',
			6                   => 'Six',
			7                   => 'Seven',
			8                   => 'Eight',
			9                   => 'Nine',
			'01'                   => 'One',
			'02'                   => 'Two',
			'03'                   => 'Three',
			'04'                   => 'Four',
			'05'                   => 'Five',
			'06'                   => 'Six',
			'07'                   => 'Seven',
			'08'                   => 'Eight',
			'09'                   => 'Nine',
			10                  => 'Ten',
			11                  => 'Eleven',
			12                  => 'Twelve',
			13                  => 'Thirteen',
			14                  => 'Fourteen',
			15                  => 'Fifteen',
			16                  => 'Sixteen',
			17                  => 'Seventeen',
			18                  => 'Eighteen',
			19                  => 'Nineteen',
			20                  => 'Twenty',			
			30                  => 'Thirty',
			40                  => 'Forty',
			50                  => 'Fifty',
			60                  => 'Sixty',
			70                  => 'Seventy',
			80                  => 'Eighty',
			90                  => 'Ninety'
			
		);	
		$arr = str_split($number, strlen($number)/2);
		$yearinword = "";
		if($arr[0] == 19)
		{
			$yearinword .= "Nineteen Hundred ";
		}
		else
		{
			$yearinword .= "Two Thousand ";
		}
		if($arr[1] > 20 && !in_array($arr[1],array(30,40,50,60,70,80,90)))
		{
			$narr = str_split($arr[1], strlen($arr[1])/2);
			$tens_arr = array(2=>'Twenty ',3=>'Thirty ',4=>'Forty ',5=>'Fifty ',6=>'Sixty ',7=>'Seventy ',8=>'Eighty ',9=>'Ninety ');
			$yearinword .= $tens_arr[$narr[0]];
			$yearinword .= $dictionary[$narr[1]];
			
		}else{
			if($arr[1] != '00')
			{
				$yearinword .= $dictionary[$arr[1]];
			}
		}
		return $yearinword;
	}
   public function getDObInWords($dob=null){
	if(!empty($dob) && $dob != "--"){
		
		$separator = substr($dob,2,1);
		$date_break = explode($separator,@$dob);
		$in_words = null;
		// $locale = 'en_US';
		// $fmt = numfmt_create($locale, NumberFormatter::SPELLOUT);
		
		if(isset($date_break[0]) && isset($date_break[1]) && isset($date_break[2])){
			$d = $date_break[0];
			$m = $date_break[1];
			$y = $date_break[2];
			
			// $in_words = (numfmt_format($fmt, $d));
			$in_words = ($this->getNumberToWordYear($d));
			$in_words .= ' ';
			$monthName = date('F', mktime(0, 0, 0, $m, 10));
			$in_words .= ($monthName);
			//$in_words .= ' and ';
			$in_words .= ' ';
			// $in_words .= (numfmt_format($fmt, $y));
			$in_words .= ($this->getYearInWord($y));
			$in_words .= ' ';
		} 
		
		$monthNum  = 3;
		$monthName = date('F', mktime(0, 0, 0, $monthNum, 10));
		// echo (ucwords($in_words));
		// die;
		return (ucwords($in_words));
	}else{
		return null;
	}
	
}
    public function getSerialNumber($enrollment){
        $pastInfo = Pastdata::where('ENROLLNO','=',$enrollment)->orderBy('id','asc')->first();
		//$pastInfo = $this->Pastdata->find('first',array('conditions'=>array('ENROLLNO'=>$enrollment),'order'=>array('id DESC')));		
		$findInFlag = 'Pastdata';
		$comination = null;
		$courseVal = null;
		$id = null;
		$sub_enrollment = substr($enrollment,-6,2);
		$v = 1;
		//$this->loadModel("MarksheetPrint");
		$data=MarksheetPrint::where('enrollment','=',$enrollment)->orderBy('id','DESC')->latest('version')->first();
		//$data = $this->MarksheetPrint->find('first', array('conditions' => array('enrollment' => $enrollment) ,'order' => array('MarksheetPrint.id DESC')));
		if(isset($data->version) && !empty($data->version)){
			$v = $data->version + 1;
		}
		$serialNumberMasterValue = Config::get('global.serialNumberMasterValue');
		if(empty($pastInfo)){ //fetch data from students
			$student = Student::where('enrollment','=',$enrollment)->orderBy('id','DESC')->first();
			$application = Application::where('student_id','=',@$student->id)->orderBy('id','DESC')->first();
			$courseVal = @$application->course;
			$id = @$student->id;
		} else {
			$courseVal = @$pastInfo->CLASS;
			$id = @$pastInfo->id;
		}
		$comination = "M".$comination . $sub_enrollment . ($serialNumberMasterValue + $id) . $v ;
		$dataSave['version'] = $v;
		$dataSave['publish_date'] = date("d-m-Y");
		$dataSave['enrollment'] = $enrollment;
		$dataSave['serial_number'] = $comination;
		
        $data=MarksheetPrint::create($dataSave);
		
		// MarksheetPrint->save($dataSave);
		 
		return $comination;
	}

	public function getSerialNumbercertficate($enrollment){
        $pastInfo = Pastdata::where('ENROLLNO','=',$enrollment)->orderBy('id','asc')->first();
		//$pastInfo = $this->Pastdata->find('first',array('conditions'=>array('ENROLLNO'=>$enrollment),'order'=>array('id DESC')));		
		$findInFlag = 'Pastdata';
		$comination = null;
		$courseVal = null;
		$id = null;
		$sub_enrollment = substr($enrollment,-6,2);
		$v = 1;
		$data=CertificatePrint::where('enrollment','=',$enrollment)->orderBy('id','DESC')->latest('version')->first();
		if(isset($data->version) && !empty($data->version)){
			$v = $data->version + 1;
		}
		$serialNumberMasterValue = Config::get('global.serialNumberMasterValue');
		if(empty($pastInfo)){ //fetch data from students
			$student = Student::where('enrollment','=',$enrollment)->orderBy('id','DESC')->first();
			$application = Application::where('student_id','=',@$student->id)->orderBy('id','DESC')->first();
			$courseVal = @$application->course;
			$id = @$student->id;
		} else {
			$courseVal = @$pastInfo->CLASS;
			$id = @$pastInfo->id;
		}
		$comination = "C".$comination . $sub_enrollment . ($serialNumberMasterValue + $id) . $v ;
		$dataSave['version'] = $v;
		$dataSave['publish_date'] = date("d-m-Y");
		$dataSave['enrollment'] = $enrollment;
		$dataSave['serial_number'] = $comination;
		
        $data=CertificatePrint::create($dataSave);
		
		// MarksheetPrint->save($dataSave);
		 
		return $comination;
	}

	
    public function getDisplayExamMonthYear($exam_month_year = null){
		$displaymonthyears = array('EX_YR','display_ex_month_year');
        $data = DB::table('display_month_years')->where('EX_YR','=',$exam_month_year)->orderBy('id','DESC')->first($displaymonthyears);
		//$data = DB::table('display_month_years')->find('list', array('fields' => array('EX_YR','display_ex_month_year'),'conditions' => array('EX_YR' => $exam_month_year)));
		if(isset($data->display_ex_month_year)){
			return $data->display_ex_month_year;
		}
		return false;
		
	}
	
    public function _getSubjectsCodeId($course=null){
		
			$condition=array();
			// $condition['deleted']=0;
			if(isset($course)){
				$condition['course'] = $course;
			}
			
            $subjectfields = ['subject_code','id'];
			
           // $list = Subject::where('course','=',$course)->orderBy('subject_type', 'asc')->orderBy('name','asc')->get($subjectfields);
		   $list = Subject::where('course','=',$course)->orderBy('subject_type', 'asc')->orderBy('name','asc')->pluck('id','subject_code');
		   return $list;

	}
	public function _getSubjectsForMarksheet($course=null)
	{
	
		$subjectfields = array('id','real_name','subject_code');			
		$list = Subject::where('course','=',$course)->orderBy('subject_type','asc')->orderBy('real_name','asc')->get($subjectfields);
		
		$listFinal = array();
		foreach($list as $v){
			$listFinal[$v->id] = " ". $v->subject_code . "  " . $v->real_name;
		}
			
		return $listFinal;
	}
    public function getSubjectMaxMarks($subject_id = null){
		
       $conditions = array('subject_id'=>$subject_id,'board_id'=>81,'type'=>'GT_MAX'); 	   
        $data = DB::table('toc_subject_masters')->where($conditions)->first();
      	
		//$data = $this->TocSubjectMaster->find('first',array('conditions' => array('subject_id' => $subject_id, 'board_id' => 81, 'type' => 'GT_MAX')));
		if(isset($data->value)){
			return $data->value;
		}
		return false;
	}
    public function numberInWord($num=null){
		$locale = 'en_US';
		// $fmt = numfmt_create($locale, NumberFormatter::SPELLOUT);
		// $in_words = (numfmt_format($fmt, $num));
		$in_words = $this->getNumberToWordYear($num);
		return (ucwords($in_words));
	}
    public function getNumberToWordYear($number=null){
		$string = null;
		
		$hyphen      = ' ';
		$conjunction = ' ';
		$separator   = ', ';
		$negative    = 'negative ';
		$decimal     = ' point ';
		$dictionary  = array(
			0                   => 'zero',
			1                   => 'one',
			2                   => 'two',
			3                   => 'three',
			4                   => 'four',
			5                   => 'five',
			6                   => 'six',
			7                   => 'seven',
			8                   => 'eight',
			9                   => 'nine',
			'01'                   => 'one',
			'02'                   => 'two',
			'03'                   => 'three',
			'04'                   => 'four',
			'05'                   => 'five',
			'06'                   => 'six',
			'07'                   => 'seven',
			'08'                   => 'eight',
			'09'                   => 'nine',
			10                  => 'ten',
			11                  => 'eleven',
			12                  => 'twelve',
			13                  => 'thirteen',
			14                  => 'fourteen',
			15                  => 'fifteen',
			16                  => 'sixteen',
			17                  => 'seventeen',
			18                  => 'eighteen',
			19                  => 'nineteen',
			20                  => 'twenty',
			30                  => 'thirty',
			40                  => 'forty',
			50                  => 'fifty',
			60                  => 'sixty',
			70                  => 'seventy',
			80                  => 'eighty',
			90                  => 'ninety',
			100                 => 'hundred',
			1000                => 'thousand'
			//1000000             => 'million',
			//1000000000          => 'billion',
			//1000000000000       => 'trillion',
			//1000000000000000    => 'quadrillion',
			//1000000000000000000 => 'quintillion'
		);

		if (!is_numeric($number)) {
			return false;
		}

		if (($number >= 0 && (int) $number < 0) || (int) $number < 0 - PHP_INT_MAX) {
			// overflow
			trigger_error(
				'convert_number_to_words only accepts numbers between -' . PHP_INT_MAX . ' and ' . PHP_INT_MAX,
				E_USER_WARNING
			);
			return false;
		}

		if ($number < 0) {
			return $negative . $this->getNumberToWordYear(abs($number));
		}

		$string = $fraction = null;

		if (strpos($number, '.') !== false) {
			list($number, $fraction) = explode('.', $number);
		}

		switch (true) {
			case $number < 21:
				$string = @$dictionary[$number];
				break;
			case $number < 100:
				$tens   = ((int) ($number / 10)) * 10;
				$units  = $number % 10;
				$string = $dictionary[$tens];
				if ($units) {
					$string .= $hyphen . $dictionary[$units];
				}
				break;
			case $number < 1000:
				$hundreds  = $number / 100;
				$remainder = $number % 100;
				$string = $dictionary[$hundreds] . ' ' . $dictionary[100];
				if ($remainder) {
					$string .= $conjunction . $this->getNumberToWordYear($remainder);
				}
				break;
			default:
				$baseUnit = pow(1000, floor(log($number, 1000)));
				$numBaseUnits = (int) ($number / $baseUnit);
				$remainder = $number % $baseUnit;
				$string = $this->getNumberToWordYear($numBaseUnits) . ' ' . $dictionary[$baseUnit];
				if ($remainder) {
					$string .= $remainder < 100 ? $conjunction : $separator;
					$string .= $this->getNumberToWordYear($remainder);
				}
				break;
		}

		if (null !== $fraction && is_numeric($fraction)) {
			$string .= $decimal;
			$words = array();
			foreach (str_split((string) $fraction) as $number) {
				$words[] = $dictionary[$number];
			}
			$string .= implode(' ', $words);
		}

		return (ucwords($string));
		 
	}
    public function getGradeOfMarks($num=null){
		$grade = null;
		if($num >= 91 && $num <= 100){
			$grade = "A";
		}else if($num >= 81 && $num <= 90){
			$grade = "B";
		}else if($num >= 71 && $num <= 80){
			$grade = "C";
		}else if($num >= 61 && $num <= 70){
			$grade = "D";
		}else if($num >= 51 && $num <= 60){
			$grade = "E";
		}else if($num >= 41 && $num <= 50){
			$grade = "F";
		}else if($num >= 33 && $num <= 40){
			$grade = "G";
		}else if($num >= 16 && $num <= 32){
			$grade = "H";
		}else if($num >= 0 && $num <= 15){
			$grade = "I";
		} 
		return (ucwords($grade));
	}

	public function getpastdata($enrollment=null){
		$pastdata=Pastdata::where('ENROLLNO','=',$enrollment)->whereNull('deleted_at')->orderBy('id', 'DESC')->first();
		return $pastdata;
	}


	public function getstudentdata($enrollment=null){
		$conditions=[
			'enrollment'=>$enrollment,
		];
		$datastudent=Student::where($conditions)->whereNull('deleted_at')->orderBy('id', 'DESC')->first();
		if(!empty(@$datastudent->exam_year) && @$datastudent->exam_year<=123 || @$datastudent->exam_year==0){
            $studentdata=Student::where('enrollment','=',$enrollment)->whereNull('deleted_at')->whereNotNull('challan_tid')->orderBy('id', 'DESC')->first();
		}else{
			$studentdata=Student::where('enrollment','=',$enrollment)->whereNull('deleted_at')->where('is_eligible','=',1)->orderBy('id', 'DESC')->first();
		}
		if(!empty($studentdata)){
			return $studentdata;
		}else{
			return false;
		}
		
	}

	public function getexamsubjectsdata($enrollment=null){
		$data = DB::table('exam_subjects')->join('students','exam_subjects.student_id','=','students.id')
		->join('subjects','exam_subjects.subject_id','=','subjects.id')
		->whereNull('students.deleted_at')
		->where([['students.enrollment', '=',$enrollment]])->orderBy('exam_subjects.exam_year','ASC')->orderBy('exam_subjects.exam_month','DESC')->orderBy('subjects.subject_code','asc')->get(array('exam_subjects.*','students.enrollment','students.stream'));
		return $data;
	}

	public function getexamsubjectresultnullcount($enrollment=null){
		$conditions=['students.enrollment'=>$enrollment];
		$data = DB::table('exam_subjects')->join('students','exam_subjects.student_id','=','students.id')
		->whereNull('students.deleted_at')->whereNull('exam_subjects.deleted_at')
		->where($conditions)
		->where(function($query) {
			$query->where('exam_subjects.final_result','')
				->orWhere('exam_subjects.final_result',NULL);
		})->get(array('exam_subjects.*','students.enrollment','students.stream'));
		return $data;
	}

	public function getallexamsubjectsdata($enrollment=null,$exam_year=null,$exam_month=null){
		if(@$exam_year && @$exam_month){
			$conditions=['students.enrollment'=>$enrollment,'exam_subjects.exam_year'=>$exam_year,'exam_subjects.exam_month'=>$exam_month];
		}else{
			$conditions=['students.enrollment'=>$enrollment];
		}

		$data = ExamSubject::join('students','exam_subjects.student_id','=','students.id')->
		join('subjects','subjects.id','=','exam_subjects.subject_id')
		->whereNull('students.deleted_at')->whereNull('exam_subjects.deleted_at')
		->where($conditions)->orderBy('subject_code','asc')->get(array('exam_subjects.*','students.enrollment','students.stream'));
		return $data; 
	}

	public function getstudentsubject($enrollment=null){
		$data = ExamSubject::join('students','exam_subjects.student_id','=','students.id')
		->whereNull('students.deleted_at')->whereNull('exam_subjects.deleted_at')
		->where([['students.enrollment', '=',$enrollment]])->orderBy('exam_subjects.subject_id','asc')->pluck('exam_subjects.subject_id');
		return $data; 
	}
	public function previousqualificationget($course=null,$stream=null,$admtype=null)
	{
		$obj_controller= new Controller();
		$result = DB::table('master_previous_qualifications')->where('course',$course)
		->where('adm_type',$admtype)->where('stream',$stream)
		->first('previous_qualification_name'); 
		$result = explode(",",@$result->previous_qualification_name);
		$combo_name = 'pre-qualifi';$pre_qualifi = $obj_controller->master_details($combo_name);
		$finalArr = array();
		foreach(@$result as $v ){
			$finalArr[$v] = $pre_qualifi[$v];
		} 
		return $finalArr;
    }

	public function previousboardget($admtype=null)
	{	$obj_controller= new Controller();
		$boards = $obj_controller->getAdmissionTypeBords($admtype);
		return $boards;
    }

	public function qrcode($value,$enrollment){
		$qrcdeo = new QRcode();
		$directory_path = public_path("qrcode/enrollment");
		$directory = File::makeDirectory($directory_path,$mode = 0777, true, true);
		$value = $value;
		$ecc  = 'L';
		$file = public_path("qrcode/enrollment/$enrollment.png");
		$pixel_size =4;
		$frame_size = 2;
		$qrcdeo->png($value,$file,$ecc,$pixel_size,$frame_size);
	}
	 
	/* Marksheet test case start */ 
		public function testCaseSubjectAndFinalResultChecking(){
			$mainFinalArr = array();
			$enrollments = $this->tempgetIssueMarksheetStudents();
			
			foreach($enrollments as $k => $enrollment){
				$mainFinalArr[$enrollment] = $this->testCaseSingleMarksheetDetails($enrollment);
				
				
			} 
			$response = array();
			foreach($mainFinalArr as $k => $value){ 
				$concat = null;
				foreach($value['examSubjectsMarksData'] as $k=> $subjectDetails){
					$concat = $subjectDetails->student_id . "_". $subjectDetails->subject_id . "_". $subjectDetails->total_marks . "_". $subjectDetails->final_result;
					$response[$value['student']['id'] . "_" . $subjectDetails->subject_id]['id'] = $value['student']['id'];
					$response[$value['student']['id'] . "_" . $subjectDetails->subject_id]['enrollment'] = $value['student']['enrollment'];
					$response[$value['student']['id'] . "_" . $subjectDetails->subject_id]['course'] = $value['student']['course'];
					$response[$value['student']['id'] . "_" . $subjectDetails->subject_id]['final_result'] = $value['final_result']['final_result'];
					$response[$value['student']['id'] . "_" . $subjectDetails->subject_id]['total_marks'] = $value['final_result']['total_marks'];
					$response[$value['student']['id'] . "_" . $subjectDetails->subject_id]['exam_year'] = $value['final_result']['exam_year'];
					$response[$value['student']['id'] . "_" . $subjectDetails->subject_id]['exam_month'] = $value['final_result']['exam_month'];
					$response[$value['student']['id'] . "_" . $subjectDetails->subject_id]['concat'] = $concat; 
				} 
				
			}
			$html = "";
			$html .= "<table width='100%' border='1px;'>";
			$html .= "<tr>";
			$html .= "<th>Id</th>";
			$html .= "<th>Enrollment</th>";
			$html .= "<th>Course</th>";
			$html .= "<th>Final Result</th>";
			$html .= "<th>Total Marks</th>";
			$html .= "<th>Exam Year</th>";
			$html .= "<th>Exam Month</th>";
			$html .= "<th>Concat</th>";
			$html .= "</tr>";
			foreach($response as $student_id => $data){
				$html .= "<tr>"; 
				$html .= "<td>" . $data['id'] ."</td>";
				$html .= "<td>" . $data['enrollment'] ."</td>";
				$html .= "<td>" . $data['course'] ."</td>";
				$html .= "<td>" . $data['final_result'] ."</td>";
				$html .= "<td>" . $data['total_marks'] ."</td>";
				$html .= "<td>" . $data['exam_year'] ."</td>";
				$html .= "<td>" . $data['exam_month'] ."</td>";
				$html .= "<td>" . $data['concat'] ."</td>";
				$html .= "</tr>";
			}
			$html .= "</table>"; 
			echo $html;die;
		}


		public function tempgetIssueMarksheetStudents(){
			$studentIds = array
			return $studentIds;
		} 

		public function testCaseSingleMarksheetDetails($enrollment=null){
			$marksheet_type = 'pass';
			$marksheet_component_obj = new MarksheetCustomComponent;
			$current_admission_session_id = Config::get('global.current_admission_session_id');
			$exam_month = Config::get('global.current_exam_month_id');
			$pastdataurl=config("global.pastdata_document");
			$pastdatadocument=config("global.PAST_DATA_DOCUMENT");
			$title = "Single Marksheet";
			$table_id = "Single Marksheet";
			$formId = ucfirst(str_replace(" ","-",$title));
			$studentdata=Student::where('enrollment',$enrollment)->first(['id','enrollment']);
			$documents = '';
			$totalMarks = 0;
			$grandFinalTotalMarks = 0;
			
			if($enrollment == null || $enrollment == ''){
				return false;
				return redirect()->route('downloadBulkDocument')->with('message',"Enrollment is not in correct format.");
			} 
			
			$serial_number = $marksheet_component_obj->getSerialNumber(@$enrollment);
			
			$examresultfields = array('final_result','exam_month','exam_year','total_marks','percent_marks','additional_subjects');
			$final_result = ExamResult::where('enrollment','=',$enrollment)->orderBy('id','DESC')->first($examresultfields);
			if(empty($final_result)){
				return false;
			}
			$pastInfo = Pastdata::where('ENROLLNO','=',$enrollment)->orderBy('id','DESC')->first();
			if(!empty($pastInfo) && !empty($final_result)){
				$field=["pastdatas.ENROLLNO  as enrollment","pastdatas.CLASS  as course","pastdatas.NAME as name" ,"pastdatas.FNAME as father_name","pastdatas.MNAME as mother_name", "pastdatas.DOB as dob"];
				$student = Pastdata::where('ENROLLNO','=',$enrollment)->orderBy('id','DESC')->first($field);
			}else{
				$student = Student::where('enrollment','=',$enrollment)->orderBy('id','DESC')->first();
			}
			$combination = '';
			$resultDate = '';
			if(isset($final_result->exam_month) && isset($final_result->exam_year)){
				$combination = $final_result->exam_month . ' '. $final_result->exam_year;
			}
			$courseVal = '';
			$resultsyntax = array('999'=>'AB','666'=>'SYCP','777'=>'SYCT','888'=>'SYC','P'=>'P');
			
			if(!empty($student)){ 
				$application = Application::where('student_id','=',@$student->id)->orderBy('id','DESC')->first();
				
				$student->display_exam_month_year = $marksheet_component_obj->getDisplayExamMonthYear($combination);			
				$newexamresultfields = array('exam_year','exam_month','result_date');
				$final_result_data = ExamResult::where('enrollment','=',$enrollment)->orderBy('id','DESC')->first($newexamresultfields);
				if(isset($final_result_data->result_date) && $final_result_data->result_date != ""){
					 $resultDate = date("d-m-Y", strtotime(@$final_result_data->result_date));
					//$dtarr = explode('-',@$final_result_data->result_date);
					//$resultDate = $dtarr[2]."-".$dtarr[1]."-".$dtarr[0];
					
					
				}
				
				$documents = Document::where('student_id','=',$student->id)->orderBy('id','DESC')->first();
				$courseVal = $student->course;			
				
				$address = Address::where('student_id','=',$student->id)->orderBy('id','DESC')->first();	
				
				$findInFlag = 'Student';
				$dtarr = explode('-',$student->dob);
				$student->dob = $dtarr[2]."-".$dtarr[1]."-".$dtarr[0];
			} else {
				if(empty($final_result)){
					$courseVal = $pastInfo->CLASS; 
					$subjectCodeIds = $marksheet_component_obj->_getSubjectsCodeId($courseVal);
					
					$final_result->final_result = @$pastInfo->RESULT;
					$final_result->total_marks = @$pastInfo->TOTAL_MARK;
					$final_result->percent_marks = @$pastInfo->Percentage;
					
					$dtarr = explode('-',@$pastInfo->ResultDate);
					$resultDate = $dtarr[2]."-".$dtarr[1]."-".$dtarr[0];
					
					if(isset($combination) && $combination != ''){
						$student->display_exam_month_year = $marksheet_component_obj->getDisplayExamMonthYear($combination);
					}
				} else {
					// $stuexam=ExamSubject::where('student_id',@$studentdata->id)->latest('exam_year')->first(['exam_year','exam_month']);
					
					if(@$final_result->exam_year){
						$examSubjectsMarksData = $marksheet_component_obj->getallexamsubjectsdata($enrollment,$final_result->exam_year,$final_result->exam_month);
					   
					}else{
						$examSubjectsMarksData = array();
					}
					
					$newexamresultfields = array('exam_year','exam_month','result_date');
					$final_result_data = ExamResult::where('enrollment','=',$enrollment)->orderBy('id','DESC')->first($examresultfields);	
					
					//$newexamresultfields = array('exam_year','exam_month','result_date');
					//$final_result_data = ExamResult::where('enrollment','=',$enrollment)->orderBy('id','DESC')->first($examresultfields);			
					
					if(isset($final_result_data->result_date) && $final_result_data->result_date != ""){
						$resultDate = $final_result_data->result_date;
					}
					$student->display_exam_month_year = $marksheet_component_obj->getDisplayExamMonthYear($combination);
				}
				
				$student->ai_code = substr($pastInfo->ENROLLNO,0,5);
				$ai_code = $student->ai_code;    
				$student->enrollment = $pastInfo->ENROLLNO;
				$student->name = $pastInfo->NAME;
				$student->father_name = $pastInfo->FNAME;
				$student->mother_name = $pastInfo->MNAME;
				$pastInfo->DOB = $new_date = $pastInfo->DOB;//date('d/m/Y', strtotime($pastInfo['Pastdata']['DOB']));
				$student->dob = $pastInfo->DOB;
				@$dtarr = explode('-',$student['dob']);
				@$student->dob = @$dtarr[2]."-".@$dtarr[1]."-".@$dtarr[0];
				
				@$student->course = $pastInfo->CLASS;
				@$student->yy = $yy = substr($pastInfo->ENROLLNO,5,2);
				@$student->student_code =  $st_code = substr($pastInfo->ENROLLNO,7);
				@$courseVal = $pastInfo->CLASS; 
				@$student->display_exam_month_year=$pastInfo->EX_YR;
				@$addressTemp = $pastInfo->ADDRESS;
				if(isset($pastInfo->DISTRICT) && !empty($pastInfo->DISTRICT)){
					@$addressTemp .= ','.$pastInfo->DISTRICT;
				}
				if(isset($pastInfo->STATE) && !empty($pastInfo->STATE)){
					@$addressTemp .= ','.$pastInfo->STATE;
				}
				if(isset($pastInfo->PIN) && !empty($pastInfo->PIN)){
					@$addressTemp .= '-'.$pastInfo->PIN;
				}
				@$address->address1 = $addressTemp;
				@$address->address2 = '';
				@$address->address3 = '';
				@$address->city_name = '';
				@$address->pincode = '';
				
				if(isset($pastInfo->MOBILE) && !empty($pastInfo->MOBILE)){
					@$student->mobile = $pastInfo->MOBILE;
				}
				if($pastInfo->ERTYPE != '' && $pastInfo->ERTYPE == 'GENERAL_ADM' || 	$pastInfo->ERTYPE == 'STREAM2'){
					$student->adm_type = 1;
				}else if($pastInfo->ERTYPE != '' && $pastInfo->ERTYPE == 'READMISSION'){
					$student['adm_type'] = 2;
				}else if($pastInfo->ERTYPE != '' && $pastInfo->ERTYPE == 'PARTADMISSION'){
					$student->adm_type = 3;
				}else if($pastInfo->ERTYPE != '' && $pastInfo->ERTYPE == 'IMPROVEMENT'){
					$student->adm_type = 4;				
				}else if($pastInfo->ERTYPE != '' && $pastInfo->ERTYPE == 'SUPPLEMENTARY'){
					$student->adm_type = 1;	//11 for supplementary ertype and admission type			
				}else{ //if ertype in pastdata table is balnk or null then use gen_adm adm_type
					$student->adm_type = 1;
				}
			}
			
			$sub_enrollment = substr($enrollment,-6,2);
			if($sub_enrollment >= '17'){
				//$stuexam1=ExamSubject::where('student_id',@$studentdata->id)->orderBy('exam_year', 'DESC')->orderBy('exam_month','DESC')->first(['exam_year','exam_month']);
				$examSubjectsMarksData =$marksheet_component_obj->getallexamsubjectsdata($enrollment,$final_result->exam_year,$final_result->exam_month);
			
			}else{
				$examsubjectfields = array('id', 'subject_id','final_theory_marks','final_practical_marks','sessional_marks_reil_result','total_marks','final_result');
				$examSubjectsMarksData = ExamSubject::where('enrollment','=',$enrollment)->orderBy('subject_id','desc')->get($examsubjectfields);
			}
			$examsubjectcount=count($examSubjectsMarksData);
			$subjectCodeIds = $marksheet_component_obj->_getSubjectsCodeId($courseVal);
			if(($examsubjectcount == 0)){
				$examSubjectsMarksData=array();
				if(isset($pastInfo->FRES1) && $pastInfo->FRES1 != ''){
					$examSubjectsMarksData[0]['subject_id'] = $subjectCodeIds[$pastInfo->EX_SUB1];
					$examSubjectsMarksData[0]['final_theory_marks'] = $pastInfo->FTM1;
					$examSubjectsMarksData[0]['final_practical_marks'] = $pastInfo->FPM1;
					$examSubjectsMarksData[0]['sessional_marks_reil_result'] = $pastInfo->fst1;
					$examSubjectsMarksData[0]['total_marks'] = $pastInfo->FTOT1;
					$examSubjectsMarksData[0]['final_result'] = $pastInfo->FRES1;
					$examSubjectsMarksData[0]['max_marks'] = $marksheet_component_obj->getSubjectMaxMarks($subjectCodeIds[$pastInfo->EX_SUB1]);
					$examSubjectsMarksData[0]['num_words'] = $marksheet_component_obj->numberInWord($examSubjectsMarksData[0]['total_marks']);	
					$examSubjectsMarksData[0]['grade_marks'] = $marksheet_component_obj->getGradeOfMarks($examSubjectsMarksData[0]['total_marks']);
				}

				if(isset($pastInfo->FRES2) && $pastInfo->FRES2 != '' ){
					$examSubjectsMarksData[1]['subject_id'] = $subjectCodeIds[$pastInfo->EX_SUB2];
					$examSubjectsMarksData[1]['final_theory_marks'] = $pastInfo->FTM2;
					$examSubjectsMarksData[1]['final_practical_marks'] = $pastInfo->FPM2;
					$examSubjectsMarksData[1]['sessional_marks_reil_result'] = $pastInfo->fst2;
					$examSubjectsMarksData[1]['total_marks'] = $pastInfo->FTOT2;
					$examSubjectsMarksData[1]['final_result'] = $pastInfo->FRES2;			
					$examSubjectsMarksData[1]['max_marks'] =  $marksheet_component_obj->getSubjectMaxMarks($subjectCodeIds[$pastInfo->EX_SUB2]);
					$examSubjectsMarksData[1]['num_words'] = $marksheet_component_obj->numberInWord($examSubjectsMarksData[1]['total_marks']);	
					$examSubjectsMarksData[1]['grade_marks'] = $marksheet_component_obj->getGradeOfMarks($examSubjectsMarksData[1]['total_marks']);
				}

				if(isset($pastInfo->FRES3) && $pastInfo->FRES3 != ''){
					$examSubjectsMarksData[2]['subject_id'] = $subjectCodeIds[$pastInfo->EX_SUB3];
					$examSubjectsMarksData[2]['final_theory_marks'] = $pastInfo->FTM3;
					$examSubjectsMarksData[2]['final_practical_marks'] = $pastInfo->FPM3;
					$examSubjectsMarksData[2]['sessional_marks_reil_result'] = $pastInfo->fst3;
					$examSubjectsMarksData[2]['total_marks'] = $pastInfo->FTOT3;
					$examSubjectsMarksData[2]['final_result'] = $pastInfo->FRES3;
					$examSubjectsMarksData[2]['max_marks'] = $marksheet_component_obj->getSubjectMaxMarks($subjectCodeIds[$pastInfo->EX_SUB3]);
					$examSubjectsMarksData[2]['num_words'] = $marksheet_component_obj->numberInWord($examSubjectsMarksData[2]['total_marks']);	
					$examSubjectsMarksData[2]['grade_marks'] = $marksheet_component_obj->getGradeOfMarks($examSubjectsMarksData[2]['total_marks']);
				}

				if(isset($pastInfo->FRES4) && $pastInfo->FRES4 != ''){
					$examSubjectsMarksData[3]['subject_id'] = $subjectCodeIds[$pastInfo->EX_SUB4];
					$examSubjectsMarksData[3]['final_theory_marks'] = $pastInfo->FTM4;
					$examSubjectsMarksData[3]['final_practical_marks'] = $pastInfo->FPM4;
					$examSubjectsMarksData[3]['sessional_marks_reil_result'] = $pastInfo->fst4;
					$examSubjectsMarksData[3]['total_marks'] = $pastInfo->FTOT4;
					$examSubjectsMarksData[3]['final_result'] = $pastInfo->FRES4;				
					$examSubjectsMarksData[3]['max_marks'] = $marksheet_component_obj->getSubjectMaxMarks($subjectCodeIds[$pastInfo->EX_SUB4]);
					$examSubjectsMarksData[3]['num_words'] = $marksheet_component_obj->numberInWord($examSubjectsMarksData[3]['total_marks']);	
					$examSubjectsMarksData[3]['grade_marks'] = $marksheet_component_obj->getGradeOfMarks($examSubjectsMarksData[3]['total_marks']);
				}

				if(isset($pastInfo->FRES5) && $pastInfo->FRES5 != ''){
					$examSubjectsMarksData[4]['subject_id'] = $subjectCodeIds[$pastInfo->EX_SUB5];
					$examSubjectsMarksData[4]['final_theory_marks'] = $pastInfo->FTM5;
					$examSubjectsMarksData[4]['final_practical_marks'] = $pastInfo->FPM5;
					$examSubjectsMarksData[4]['sessional_marks_reil_result'] = $pastInfo->fst5;
					$examSubjectsMarksData[4]['total_marks'] = $pastInfo->FTOT5;
					$examSubjectsMarksData[4]['final_result'] = $pastInfo->FRES5;			
					$examSubjectsMarksData[4]['max_marks'] = $marksheet_component_obj->getSubjectMaxMarks($subjectCodeIds[$pastInfo->EX_SUB5]);
					$examSubjectsMarksData[4]['num_words'] = $marksheet_component_obj->numberInWord($examSubjectsMarksData[4]['total_marks']);	
					$examSubjectsMarksData[4]['grade_marks'] = $marksheet_component_obj->getGradeOfMarks($examSubjectsMarksData[4]['total_marks']);				
				}

				if(isset($pastInfo->FRES6) && $pastInfo->FRES6 != ''){
					$examSubjectsMarksData[5]['subject_id'] = @$subjectCodeIds[@$pastInfo->EX_SUB9];
					$examSubjectsMarksData[5]['final_theory_marks'] = $pastInfo->FTM6;
					$examSubjectsMarksData[5]['final_practical_marks'] = $pastInfo->FPM6;
					$examSubjectsMarksData[5]['sessional_marks_reil_result'] = $pastInfo->fst6;
					$examSubjectsMarksData[5]['total_marks'] = $pastInfo->FTOT6;
					$examSubjectsMarksData[5]['final_result'] = $pastInfo->FRES6;			
					$examSubjectsMarksData[5]['max_marks'] = $marksheet_component_obj->getSubjectMaxMarks($subjectCodeIds[$pastInfo->EX_SUB9]);
					$examSubjectsMarksData[5]['num_words'] = $marksheet_component_obj->numberInWord($examSubjectsMarksData[5]['total_marks']);	
					$examSubjectsMarksData[5]['grade_marks'] = $marksheet_component_obj->getGradeOfMarks($examSubjectsMarksData[5]['total_marks']);
				}

				if(isset($pastInfo->FRES7) && $pastInfo->FRES7 != ''){
					$examSubjectsMarksData[6]['subject_id'] = $subjectCodeIds[$pastInfo->EX_SUB7];
					$examSubjectsMarksData[6]['final_theory_marks'] = $pastInfo->FTM7;
					$examSubjectsMarksData[6]['final_practical_marks'] = $pastInfo->FPM7;
					$examSubjectsMarksData[6]['sessional_marks_reil_result'] = $pastInfo->fst7;
					$examSubjectsMarksData[6]['total_marks'] = $pastInfo->FTOT7;
					$examSubjectsMarksData[6]['final_result'] = $pastInfo->FRES7;			
					$examSubjectsMarksData[6]['max_marks'] = $marksheet_component_obj->getSubjectMaxMarks($subjectCodeIds[$pastInfo->EX_SUB7]);
					$examSubjectsMarksData[6]['num_words'] = $marksheet_component_obj->numberInWord($examSubjectsMarksData[6]['total_marks']);	
					$examSubjectsMarksData[6]['grade_marks'] = $marksheet_component_obj->getGradeOfMarks($examSubjectsMarksData[6]['total_marks']);
				}

			}else{
				if(!empty($examSubjectsMarksData)){			
					$k=0;
					foreach($examSubjectsMarksData as $v){
						$examSubjectsMarksData[$k]['max_marks'] = $marksheet_component_obj->getSubjectMaxMarks($v->subject_id);
						$examSubjectsMarksData[$k]['num_words'] = $marksheet_component_obj->numberInWord($v->total_marks);
						$examSubjectsMarksData[$k]['grade_marks'] = $marksheet_component_obj->getGradeOfMarks($v->total_marks);
						$totalMarks = $totalMarks + $examSubjectsMarksData[$k]['max_marks'] ;
						$grandFinalTotalMarks = $grandFinalTotalMarks + $v->total_marks;
						$k++;
					}
				} 
			}
			
			$dobInWords = null;
			if(@($student->dob)){
				$dobInWords = $marksheet_component_obj->getDObInWords($student->dob);
			}
				
			$subjects = $marksheet_component_obj->_getSubjectsForMarksheet($courseVal);
			// Get Barcode code 
			$imagepath = asset('public/barcode/enrollment/'.$enrollment.'.png');
			$custom_component_obj = new CustomComponent;
			$barcode = $custom_component_obj->barcode($enrollment);
			$barcode_img = '<img src="'.$imagepath.'" alt=barcode-'.$enrollment.' style="font-size:0;position:relative;width:132px;height:20px;" >'; 
			// Get Barcode code 
			$marksheet_type = 'Issued On '; 
			 
			$finalArr['student'] = $student;
			$finalArr['examSubjectsMarksData'] = $examSubjectsMarksData;
			$finalArr['subjects'] = $subjects;
			$finalArr['final_result'] = $final_result;
			return $finalArr;
		}

	/* Marksheet test case end */
	
	public function qrcode($value,$enrollment){
		$qrcdeo = new QRcode();
		$directory_path = public_path("qrcode/enrollment");
		$directory = File::makeDirectory($directory_path,$mode = 0777, true, true);
		$value = $value;
		$ecc  = 'L';
		$file = public_path("qrcode/enrollment/$enrollment.png");
		$pixel_size =4;
		$frame_size = 2;
		$qrcdeo->png($value,$file,$ecc,$pixel_size,$frame_size);
	}
	

	
}


